-- Users table
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  display_name TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  password_hash TEXT NOT NULL,
  bio TEXT,
  fitness_goal TEXT,
  weight_unit TEXT DEFAULT 'kg',
  avatar TEXT,
  joined_date TIMESTAMP DEFAULT NOW()
);

-- Workouts table
CREATE TABLE workouts (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  date DATE NOT NULL,
  xp_gained INT DEFAULT 0,
  notes TEXT
);

-- Exercises table
CREATE TABLE exercises (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  workout_id UUID REFERENCES workouts(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  muscle_group TEXT,
  sets INT NOT NULL,
  reps INT NOT NULL,
  weight NUMERIC,
  weight_unit TEXT DEFAULT 'kg'
);

-- Achievements table
CREATE TABLE achievements (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  description TEXT,
  earned BOOLEAN DEFAULT FALSE,
  progress INT DEFAULT 0,
  date_earned TIMESTAMP
);

-- Rank Progressions table
CREATE TABLE rank_progressions (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  rank TEXT NOT NULL,
  min_xp INT NOT NULL,
  max_xp INT
);

-- Friend Requests table
CREATE TABLE friend_requests (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  sender_id UUID REFERENCES users(id) ON DELETE CASCADE,
  receiver_id UUID REFERENCES users(id) ON DELETE CASCADE,
  status TEXT CHECK (status IN ('pending', 'accepted', 'rejected')) DEFAULT 'pending',
  request_date TIMESTAMP DEFAULT NOW()
);
